✅ ToneBridge Backend Service: 연결됨 (참조 파일 10개 로드됨)
Console.js:61 🔍 Google Analytics 초기화 완료 - ID: G-56D78RCESE
Console.js:61 📊 GA 페이지뷰 이벤트 전송: 음성 분석 - ToneBridge
Console.js:61 🎯 [STEP 3] Hook 상태 변화 감지: Object
Console.js:61 🎯 ToneBridge Voice Analysis App initialized
2Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 Chart.js annotation 플러그인이 이미 등록되어 있습니다
Console.js:61 🎯 API 응답 데이터: Object
Console.js:61 ✅ ToneBridge Backend Service: 연결됨 (참조 파일 10개 로드됨)
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 피치 콜백 설정 중...
2Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 피치 콜백 설정 중...
injected.js:253  POST https://a48792d4-52c9-4019-a97e-0768ee33987e-00-26nknzifnjjvm.pike.replit.dev/analyze_ref?t=1757298942945 404 (Not Found)
window.fetch @ Network.js:219
apply @ injected.js:253
(anonymous) @ VoiceAnalysisApp.tsx:293
At @ react-dom.production.min.js:54
Bt @ react-dom.production.min.js:54
(anonymous) @ react-dom.production.min.js:55
zi @ react-dom.production.min.js:105
Ii @ react-dom.production.min.js:106
(anonymous) @ react-dom.production.min.js:117
cc @ react-dom.production.min.js:273
Tt @ react-dom.production.min.js:52
Ui @ react-dom.production.min.js:109
Xe @ react-dom.production.min.js:74
Ye @ react-dom.production.min.js:73Understand this error
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 피치 콜백 설정 중...
injected.js:253  POST https://a48792d4-52c9-4019-a97e-0768ee33987e-00-26nknzifnjjvm.pike.replit.dev/analyze_ref?t=1757298946344 404 (Not Found)
window.fetch @ Network.js:219
apply @ injected.js:253
(anonymous) @ VoiceAnalysisApp.tsx:293
At @ react-dom.production.min.js:54
Bt @ react-dom.production.min.js:54
(anonymous) @ react-dom.production.min.js:55
zi @ react-dom.production.min.js:105
Ii @ react-dom.production.min.js:106
(anonymous) @ react-dom.production.min.js:117
cc @ react-dom.production.min.js:273
Tt @ react-dom.production.min.js:52
Ui @ react-dom.production.min.js:109
Xe @ react-dom.production.min.js:74
Ye @ react-dom.production.min.js:73Understand this error
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 드롭다운 변경됨: 내려가
Console.js:61 🎯 연습 문장 선택됨: 내려가
Console.js:61 🎯 Step 1: Starting sentence selection...
Console.js:61 🎯 Step 2: Checking pitchChart object...
Console.js:61 🎯 pitchChart object: {pitchData: Array(0), addPitchData: ƒ, clearChart: ƒ, loadReferenceData: ƒ, resetForNewRecording: ƒ, …}
Console.js:61 🎯 pitchChart.loadReferenceData: async t=>{try{console.log("\ud83c\udfaf loadReferenceData called with fileId: ".concat(t,', API_BASE: "').concat(e,'"'));const s="".concat(e,"/api/reference_files/").concat(t,"/pitch?syllable_only=tr…
Console.js:61 🎯 Calling pitchChart.loadReferenceData...
Console.js:61 🎯 loadReferenceData called with fileId: 내려가, API_BASE: ""
Console.js:61 🎯 Fetching pitch data: /api/reference_files/내려가/pitch?syllable_only=true
Console.js:61 🎯 Fetching syllable data: /api/reference_files/내려가/syllables
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 Added syllable point: 어 at 0.19859415436843844s, 144.72327862744567Hz
Console.js:61 🎯 Added syllable point: 디 at 0.37864052140397475s, 227.72824265514646Hz
Console.js:61 🎯 Added syllable point: 까 at 0.5890035070450302s, 203.65221896519705Hz
Console.js:61 🎯 Added syllable point: 지 at 0.8075507470686978s, 176.9366897390534Hz
Console.js:61 🎯 Added syllable point: 내 at 0.9946432484968961s, 147.99441367320287Hz
Console.js:61 🎯 Added syllable point: 려 at 1.1718308527906607s, 148.2760245979605Hz
Console.js:61 🎯 Added syllable point: 가 at 1.3218667158882844s, 141.8424364739913Hz
Console.js:61 🎯 Added syllable point: 는 at 1.500516726263162s, 127.68171646121202Hz
Console.js:61 🎯 Added syllable point: 거 at 1.6865086835653122s, 121.16482283674884Hz
Console.js:61 🎯 Added syllable point: 예 at 1.8702995526153658s, 121.0524629087526Hz
Console.js:61 🎯 Added syllable point: 요 at 2.0683974953040467s, 198.99747372445643Hz
Console.js:61 🎯 Loaded 11 syllable representative points, maxTime: 2.0683974953040467s
Console.js:61 🎯 X-axis adjusted to audio duration: 0 - 2.3683974953040465 seconds (maxTime: 2.0683974953040467s)
Console.js:61 🧹 음절 표시 초기화 완료
Console.js:61 🎯 Adding annotations for 11 syllables:
Console.js:61 🎯 Sample syllables: (3) [{…}, {…}, {…}]
Console.js:61 🎯 Chart Y 범위: -10 ~ 15 labelY: 13.75
Console.js:61 🎯 음절 0: 어 (0.098s - 0.299s)
Console.js:61 🎯 음절 1: 디 (0.299s - 0.458s)
Console.js:61 🎯 음절 2: 까 (0.458s - 0.720s)
Console.js:61 🎯 음절 3: 지 (0.720s - 0.896s)
Console.js:61 🎯 음절 4: 내 (0.896s - 1.094s)
Console.js:61 🎯 음절 5: 려 (1.094s - 1.250s)
Console.js:61 🎯 음절 6: 가 (1.250s - 1.394s)
Console.js:61 🎯 음절 7: 는 (1.394s - 1.607s)
Console.js:61 🎯 음절 8: 거 (1.607s - 1.766s)
Console.js:61 🎯 음절 9: 예 (1.766s - 1.975s)
Console.js:61 🎯 음절 10: 요 (1.975s - 2.162s)
Console.js:61 🎯 Syllable annotations added and chart updated!
Console.js:61 🎯 현재 annotations 수: 23
Console.js:61 🎯 차트 업데이트 완료!
Console.js:61 🎯 피치 콜백 설정 중...
2Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎤 실시간 피치 데이터: 143.18Hz, 시간: 1757298971121
Console.js:61 🎤 실시간 피치 데이터: 142.72Hz, 시간: 1757298971140
Console.js:61 🎤 실시간 피치 데이터: 326.67Hz, 시간: 1757298971159
Console.js:61 🎤 실시간 피치 데이터: 317.27Hz, 시간: 1757298971183
Console.js:61 🎤 실시간 피치 데이터: 245.00Hz, 시간: 1757298971197
Console.js:61 🎤 실시간 피치 데이터: 126.36Hz, 시간: 1757298971210
Console.js:61 🎤 실시간 피치 데이터: 250.57Hz, 시간: 1757298971224
Console.js:61 🎤 실시간 피치 데이터: 262.50Hz, 시간: 1757298971236
Console.js:61 🎤 실시간 피치 데이터: 282.69Hz, 시간: 1757298971252
Console.js:61 🎤 실시간 피치 데이터: 464.21Hz, 시간: 1757298971266
Console.js:61 🎤 실시간 피치 데이터: 432.35Hz, 시간: 1757298971284
Console.js:61 🎤 실시간 피치 데이터: 380.17Hz, 시간: 1757298971300
Console.js:61 🎤 실시간 피치 데이터: 424.04Hz, 시간: 1757298971317
Console.js:61 🎤 실시간 피치 데이터: 595.95Hz, 시간: 1757298971387
Console.js:61 🎤 실시간 피치 데이터: 358.54Hz, 시간: 1757298971401
Console.js:61 🎤 실시간 피치 데이터: 14711.11Hz, 시간: 1757298971416
Console.js:61 🎤 실시간 피치 데이터: 14718.80Hz, 시간: 1757298971433
Console.js:61 🎤 실시간 피치 데이터: 479.34Hz, 시간: 1757298971451
Console.js:61 🎤 실시간 피치 데이터: 506.90Hz, 시간: 1757298971467
Console.js:61 🎤 실시간 피치 데이터: 525.00Hz, 시간: 1757298971483
Console.js:61 🎤 실시간 피치 데이터: 501.14Hz, 시간: 1757298971500
Console.js:61 🎤 실시간 피치 데이터: 490.00Hz, 시간: 1757298971516
Console.js:61 🎤 실시간 피치 데이터: 474.19Hz, 시간: 1757298971533
Console.js:61 🎤 실시간 피치 데이터: 464.21Hz, 시간: 1757298971550
Console.js:61 🎤 실시간 피치 데이터: 450.00Hz, 시간: 1757298971566
Console.js:61 🎤 실시간 피치 데이터: 938.30Hz, 시간: 1757298971583
Console.js:61 🎤 실시간 피치 데이터: 801.82Hz, 시간: 1757298971600
Console.js:61 🎤 실시간 피치 데이터: 376.92Hz, 시간: 1757298971617
Console.js:61 🎤 실시간 피치 데이터: 380.17Hz, 시간: 1757298971633
Console.js:61 🎤 실시간 피치 데이터: 658.21Hz, 시간: 1757298971650
Console.js:61 🎤 실시간 피치 데이터: 648.53Hz, 시간: 1757298971667
Console.js:61 🎤 실시간 피치 데이터: 397.30Hz, 시간: 1757298971683
Console.js:61 🎤 실시간 피치 데이터: 432.35Hz, 시간: 1757298971700
Console.js:61 🎤 실시간 피치 데이터: 441.00Hz, 시간: 1757298971716
Console.js:61 🎤 실시간 피치 데이터: 495.51Hz, 시간: 1757298971733
Console.js:61 🎤 실시간 피치 데이터: 253.45Hz, 시간: 1757298971750
Console.js:61 🎤 실시간 피치 데이터: 495.51Hz, 시간: 1757298971766
Console.js:61 🎤 실시간 피치 데이터: 495.51Hz, 시간: 1757298971783
Console.js:61 🎤 실시간 피치 데이터: 506.90Hz, 시간: 1757298971800
Console.js:61 🎤 실시간 피치 데이터: 506.90Hz, 시간: 1757298971817
Console.js:61 🎤 실시간 피치 데이터: 495.51Hz, 시간: 1757298971833
Console.js:61 🎤 실시간 피치 데이터: 958.70Hz, 시간: 1757298971850
Console.js:61 🎤 실시간 피치 데이터: 445.45Hz, 시간: 1757298971873
Console.js:61 🎤 실시간 피치 데이터: 432.35Hz, 시간: 1757298971884
Console.js:61 🎤 실시간 피치 데이터: 397.30Hz, 시간: 1757298971900
Console.js:61 🎤 실시간 피치 데이터: 436.63Hz, 시간: 1757298971917
Console.js:61 🎤 실시간 피치 데이터: 450.00Hz, 시간: 1757298971933
Console.js:61 🎤 실시간 피치 데이터: 459.38Hz, 시간: 1757298971950
Console.js:61 🎤 실시간 피치 데이터: 464.21Hz, 시간: 1757298971966
Console.js:61 🎤 실시간 피치 데이터: 474.19Hz, 시간: 1757298971983
Console.js:61 🎤 실시간 피치 데이터: 479.35Hz, 시간: 1757298972000
Console.js:61 🎤 실시간 피치 데이터: 474.19Hz, 시간: 1757298972016
Console.js:61 🎤 실시간 피치 데이터: 469.15Hz, 시간: 1757298972033
Console.js:61 🎤 실시간 피치 데이터: 474.19Hz, 시간: 1757298972050
Console.js:61 🎤 실시간 피치 데이터: 484.62Hz, 시간: 1757298972066
Console.js:61 🎤 실시간 피치 데이터: 501.14Hz, 시간: 1757298972083
Console.js:61 🎤 실시간 피치 데이터: 1050.00Hz, 시간: 1757298972099
Console.js:61 🎤 실시간 피치 데이터: 1075.61Hz, 시간: 1757298972116
Console.js:61 🎤 실시간 피치 데이터: 1102.50Hz, 시간: 1757298972133
Console.js:61 🎤 실시간 피치 데이터: 1336.36Hz, 시간: 1757298972149
Console.js:61 🎤 실시간 피치 데이터: 612.50Hz, 시간: 1757298972166
Console.js:61 🎤 실시간 피치 데이터: 484.62Hz, 시간: 1757298972183
Console.js:61 🎤 실시간 피치 데이터: 484.62Hz, 시간: 1757298972200
Console.js:61 🎤 실시간 피치 데이터: 220.50Hz, 시간: 1757298972216
Console.js:61 🎤 실시간 피치 데이터: 223.86Hz, 시간: 1757298972234
Console.js:61 🎤 실시간 피치 데이터: 572.73Hz, 시간: 1757298972249
Console.js:61 🎤 실시간 피치 데이터: 648.53Hz, 시간: 1757298972266
Console.js:61 🎤 실시간 피치 데이터: 218.32Hz, 시간: 1757298972284
Console.js:61 🎤 실시간 피치 데이터: 217.24Hz, 시간: 1757298972300
Console.js:61 🎤 실시간 피치 데이터: 209.00Hz, 시간: 1757298972317
Console.js:61 🎤 실시간 피치 데이터: 454.64Hz, 시간: 1757298972417
Console.js:61 🎤 실시간 피치 데이터: 454.64Hz, 시간: 1757298972434
Console.js:61 🎤 실시간 피치 데이터: 454.64Hz, 시간: 1757298972450
Console.js:61 🎤 실시간 피치 데이터: 454.64Hz, 시간: 1757298972467
Console.js:61 🎤 실시간 피치 데이터: 464.21Hz, 시간: 1757298972483
Console.js:61 🎤 실시간 피치 데이터: 469.15Hz, 시간: 1757298972500
Console.js:61 🎤 실시간 피치 데이터: 479.35Hz, 시간: 1757298972516
Console.js:61 🎤 실시간 피치 데이터: 474.19Hz, 시간: 1757298972533
Console.js:61 🎤 실시간 피치 데이터: 474.19Hz, 시간: 1757298972550
Console.js:61 🎤 실시간 피치 데이터: 459.38Hz, 시간: 1757298972566
Console.js:61 🎤 실시간 피치 데이터: 450.00Hz, 시간: 1757298972583
Console.js:61 🎤 실시간 피치 데이터: 441.00Hz, 시간: 1757298972600
Console.js:61 🎤 실시간 피치 데이터: 441.00Hz, 시간: 1757298972616
Console.js:61 🎤 실시간 피치 데이터: 420.00Hz, 시간: 1757298972633
Console.js:61 🎤 실시간 피치 데이터: 412.15Hz, 시간: 1757298972650
Console.js:61 🎤 실시간 피치 데이터: 412.15Hz, 시간: 1757298972667
Console.js:61 🎤 실시간 피치 데이터: 412.15Hz, 시간: 1757298972683
Console.js:61 🎤 실시간 피치 데이터: 412.15Hz, 시간: 1757298972700
Console.js:61 🎤 실시간 피치 데이터: 412.15Hz, 시간: 1757298972717
Console.js:61 🎤 실시간 피치 데이터: 412.15Hz, 시간: 1757298972733
Console.js:61 🎤 실시간 피치 데이터: 408.33Hz, 시간: 1757298972750
Console.js:61 🎤 실시간 피치 데이터: 412.15Hz, 시간: 1757298972766
Console.js:61 🎤 실시간 피치 데이터: 428.16Hz, 시간: 1757298972783
Console.js:61 🎤 실시간 피치 데이터: 450.00Hz, 시간: 1757298972800
Console.js:61 🎤 실시간 피치 데이터: 454.64Hz, 시간: 1757298972816
Console.js:61 🎤 실시간 피치 데이터: 474.19Hz, 시간: 1757298972833
Console.js:61 🎤 실시간 피치 데이터: 479.35Hz, 시간: 1757298972850
Console.js:61 🎤 실시간 피치 데이터: 484.62Hz, 시간: 1757298972866
Console.js:61 🎤 실시간 피치 데이터: 495.51Hz, 시간: 1757298972883
Console.js:61 🎤 실시간 피치 데이터: 1225.01Hz, 시간: 1757298972899
Console.js:61 🎤 실시간 피치 데이터: 1102.51Hz, 시간: 1757298972916
Console.js:61 🎤 실시간 피치 데이터: 1025.59Hz, 시간: 1757298972933
Console.js:61 🎤 실시간 피치 데이터: 1002.27Hz, 시간: 1757298972950
Console.js:61 🎤 실시간 피치 데이터: 980.01Hz, 시간: 1757298972966
2Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 [STEP 3] Hook 상태 변화 감지: {state.isPlayingRecorded: false, state.recordedBlob: true, recordedAudioRef.current: false}
Console.js:61 🎯 피치 콜백 설정 중...
injected.js:253  POST https://a48792d4-52c9-4019-a97e-0768ee33987e-00-26nknzifnjjvm.pike.replit.dev/api/record_realtime 500 (Internal Server Error)
window.fetch @ Network.js:219
apply @ injected.js:253
h @ useAudioRecording.tsx:189
u.onstop @ useAudioRecording.tsx:106Understand this error
Console.js:61 ❌ 녹음 파일 업로드 실패: Internal Server Error
Mt.forEach.n.<computed> @ Console.js:61
h @ useAudioRecording.tsx:197
await in h
u.onstop @ useAudioRecording.tsx:106Understand this error
Console.js:61 🎯🎯🎯 [STEP 2] playRecordedAudio 함수 진입!
Console.js:61 🎯 [STEP 2.1] 현재 Hook 상태 체크: {state.recordedBlob: true, state.isPlayingRecorded: false, state.isRecording: false, audioPlaybackController: true}
Console.js:61 ✅ [STEP 2.2] 녹음된 음성 존재 확인됨
Console.js:61 ✅ [STEP 2.3] 현재 재생 중이 아님 - 재생 시작 프로세스로 진행
Console.js:61 ▶️ [STEP 2.4] 새로운 오디오 컨트롤러로 재생 시작
Console.js:61 🎯🎯🎯 [STEP 2] playRecordedAudio 함수 종료
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 ✅ [STEP 2.4.9] 새로운 컨트롤러 재생 성공
Console.js:61 ✅ [STEP 2.4.11] 재생 시작 프로세스 완료
Console.js:61 ✅ [STEP 2.4.10] setState로 isPlayingRecorded: true 설정
Console.js:61 🎯 [STEP 3] Hook 상태 변화 감지: {state.isPlayingRecorded: true, state.recordedBlob: true, recordedAudioRef.current: false}
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯🎯🎯 [STEP 2] playRecordedAudio 함수 진입!
Console.js:61 🎯 [STEP 2.1] 현재 Hook 상태 체크: {state.recordedBlob: true, state.isPlayingRecorded: true, state.isRecording: false, audioPlaybackController: true}
Console.js:61 ✅ [STEP 2.2] 녹음된 음성 존재 확인됨
Console.js:61 🛑 [STEP 2.3] 현재 재생 중 - 새로운 컨트롤러로 중지
Console.js:61 🛑 [STEP 2.3.4] setState로 isPlayingRecorded: false 설정
Console.js:61 🛑 [STEP 2.3.6] 중지 프로세스 완료 - 함수 종료
Console.js:61 🛑 [STEP 2.3.5] setState 콜백 실행 - 이전 상태: true
Console.js:61 🎯 [STEP 3] Hook 상태 변화 감지: {state.isPlayingRecorded: false, state.recordedBlob: true, recordedAudioRef.current: false}
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯🎯🎯 [STEP 2] playRecordedAudio 함수 진입!
Console.js:61 🎯 [STEP 2.1] 현재 Hook 상태 체크: {state.recordedBlob: true, state.isPlayingRecorded: false, state.isRecording: false, audioPlaybackController: true}
Console.js:61 ✅ [STEP 2.2] 녹음된 음성 존재 확인됨
Console.js:61 ✅ [STEP 2.3] 현재 재생 중이 아님 - 재생 시작 프로세스로 진행
Console.js:61 ▶️ [STEP 2.4] 새로운 오디오 컨트롤러로 재생 시작
Console.js:61 🎯🎯🎯 [STEP 2] playRecordedAudio 함수 종료
Console.js:61 ✅ [STEP 2.4.9] 새로운 컨트롤러 재생 성공
Console.js:61 ✅ [STEP 2.4.10] setState로 isPlayingRecorded: true 설정
Console.js:61 ✅ [STEP 2.4.11] 재생 시작 프로세스 완료
Console.js:61 🎯 [STEP 3] Hook 상태 변화 감지: {state.isPlayingRecorded: true, state.recordedBlob: true, recordedAudioRef.current: false}
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯🎯🎯 [STEP 2] playRecordedAudio 함수 진입!
Console.js:61 🎯 [STEP 2.1] 현재 Hook 상태 체크: {state.recordedBlob: true, state.isPlayingRecorded: true, state.isRecording: false, audioPlaybackController: true}
Console.js:61 ✅ [STEP 2.2] 녹음된 음성 존재 확인됨
Console.js:61 🛑 [STEP 2.3] 현재 재생 중 - 새로운 컨트롤러로 중지
Console.js:61 🛑 [STEP 2.3.4] setState로 isPlayingRecorded: false 설정
Console.js:61 🛑 [STEP 2.3.6] 중지 프로세스 완료 - 함수 종료
Console.js:61 🛑 [STEP 2.3.5] setState 콜백 실행 - 이전 상태: true
Console.js:61 🎯 [STEP 3] Hook 상태 변화 감지: {state.isPlayingRecorded: false, state.recordedBlob: true, recordedAudioRef.current: false}
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯🎯🎯 [STEP 2] playRecordedAudio 함수 진입!
Console.js:61 🎯 [STEP 2.1] 현재 Hook 상태 체크: {state.recordedBlob: true, state.isPlayingRecorded: false, state.isRecording: false, audioPlaybackController: true}
Console.js:61 ✅ [STEP 2.2] 녹음된 음성 존재 확인됨
Console.js:61 ✅ [STEP 2.3] 현재 재생 중이 아님 - 재생 시작 프로세스로 진행
Console.js:61 ▶️ [STEP 2.4] 새로운 오디오 컨트롤러로 재생 시작
Console.js:61 🎯🎯🎯 [STEP 2] playRecordedAudio 함수 종료
Console.js:61 ✅ [STEP 2.4.9] 새로운 컨트롤러 재생 성공
Console.js:61 ✅ [STEP 2.4.10] setState로 isPlayingRecorded: true 설정
Console.js:61 ✅ [STEP 2.4.11] 재생 시작 프로세스 완료
Console.js:61 🎯 [STEP 3] Hook 상태 변화 감지: {state.isPlayingRecorded: true, state.recordedBlob: true, recordedAudioRef.current: false}
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯🎯🎯 [STEP 2] playRecordedAudio 함수 진입!
Console.js:61 🎯 [STEP 2.1] 현재 Hook 상태 체크: {state.recordedBlob: true, state.isPlayingRecorded: true, state.isRecording: false, audioPlaybackController: true}
Console.js:61 ✅ [STEP 2.2] 녹음된 음성 존재 확인됨
Console.js:61 🛑 [STEP 2.3] 현재 재생 중 - 새로운 컨트롤러로 중지
Console.js:61 🛑 [STEP 2.3.4] setState로 isPlayingRecorded: false 설정
Console.js:61 🛑 [STEP 2.3.6] 중지 프로세스 완료 - 함수 종료
Console.js:61 🛑 [STEP 2.3.5] setState 콜백 실행 - 이전 상태: true
Console.js:61 🎯 [STEP 3] Hook 상태 변화 감지: {state.isPlayingRecorded: false, state.recordedBlob: true, recordedAudioRef.current: false}
2Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 드롭다운 변경됨: 올라가
Console.js:61 🎯 연습 문장 선택됨: 올라가
Console.js:61 🎯 Step 1: Starting sentence selection...
Console.js:61 🎯 Step 2: Checking pitchChart object...
Console.js:61 🎯 pitchChart object: {pitchData: Array(115), addPitchData: ƒ, clearChart: ƒ, loadReferenceData: ƒ, resetForNewRecording: ƒ, …}
Console.js:61 🎯 pitchChart.loadReferenceData: async t=>{try{console.log("\ud83c\udfaf loadReferenceData called with fileId: ".concat(t,', API_BASE: "').concat(e,'"'));const s="".concat(e,"/api/reference_files/").concat(t,"/pitch?syllable_only=tr…
Console.js:61 🎯 Calling pitchChart.loadReferenceData...
Console.js:61 🎯 loadReferenceData called with fileId: 올라가, API_BASE: ""
Console.js:61 🎯 Fetching pitch data: /api/reference_files/올라가/pitch?syllable_only=true
Console.js:61 🎯 Fetching syllable data: /api/reference_files/올라가/syllables
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 Added syllable point: 어 at 1.5442951564764071s, 155.56239099273657Hz
Console.js:61 🎯 Added syllable point: 디 at 1.6974887461687729s, 227.28576562858981Hz
Console.js:61 🎯 Added syllable point: 까 at 1.8898713936894183s, 217.0560178395894Hz
Console.js:61 🎯 Added syllable point: 지 at 2.1045205513397676s, 185.20442818910598Hz
Console.js:61 🎯 Added syllable point: 올 at 2.2888872552137194s, 154.00888093634165Hz
Console.js:61 🎯 Added syllable point: 라 at 2.482160563139553s, 155.9370583960692Hz
Console.js:61 🎯 Added syllable point: 가 at 2.6896844375483973s, 146.492054619822Hz
Console.js:61 🎯 Added syllable point: 는 at 2.8998802931728065s, 130.7007060657853Hz
Console.js:61 🎯 Added syllable point: 거 at 3.110076148797215s, 122.06876291117246Hz
Console.js:61 🎯 Added syllable point: 예 at 3.285536248619285s, 118.25102944319823Hz
Console.js:61 🎯 Added syllable point: 요 at 3.50731068951114s, 181.04341203752548Hz
Console.js:61 🎯 Loaded 11 syllable representative points, maxTime: 3.50731068951114s
Console.js:61 🎯 X-axis adjusted to audio duration: 0 - 3.80731068951114 seconds (maxTime: 3.50731068951114s)
Console.js:61 🧹 음절 표시 초기화 완료
Console.js:61 🎯 Adding annotations for 11 syllables:
Console.js:61 🎯 Sample syllables: (3) [{…}, {…}, {…}]
Console.js:61 🎯 Chart Y 범위: -10 ~ 15 labelY: 13.75
Console.js:61 🎯 음절 0: 어 (1.474s - 1.615s)
Console.js:61 🎯 음절 1: 디 (1.615s - 1.780s)
Console.js:61 🎯 음절 2: 까 (1.780s - 1.999s)
Console.js:61 🎯 음절 3: 지 (1.999s - 2.210s)
Console.js:61 🎯 음절 4: 올 (2.210s - 2.368s)
Console.js:61 🎯 음절 5: 라 (2.368s - 2.596s)
Console.js:61 🎯 음절 6: 가 (2.596s - 2.783s)
Console.js:61 🎯 음절 7: 는 (2.783s - 3.017s)
Console.js:61 🎯 음절 8: 거 (3.017s - 3.204s)
Console.js:61 🎯 음절 9: 예 (3.204s - 3.367s)
Console.js:61 🎯 음절 10: 요 (3.367s - 3.647s)
Console.js:61 🎯 Syllable annotations added and chart updated!
Console.js:61 🎯 현재 annotations 수: 23
Console.js:61 🎯 차트 업데이트 완료!
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 드롭다운 변경됨: 낭독문장
Console.js:61 🎯 연습 문장 선택됨: 낭독문장
Console.js:61 🎯 Step 1: Starting sentence selection...
Console.js:61 🎯 Step 2: Checking pitchChart object...
Console.js:61 🎯 pitchChart object: {pitchData: Array(126), addPitchData: ƒ, clearChart: ƒ, loadReferenceData: ƒ, resetForNewRecording: ƒ, …}
Console.js:61 🎯 pitchChart.loadReferenceData: async t=>{try{console.log("\ud83c\udfaf loadReferenceData called with fileId: ".concat(t,', API_BASE: "').concat(e,'"'));const s="".concat(e,"/api/reference_files/").concat(t,"/pitch?syllable_only=tr…
Console.js:61 🎯 Calling pitchChart.loadReferenceData...
Console.js:61 🎯 loadReferenceData called with fileId: 낭독문장, API_BASE: ""
Console.js:61 🎯 Fetching pitch data: /api/reference_files/낭독문장/pitch?syllable_only=true
Console.js:61 🎯 Fetching syllable data: /api/reference_files/낭독문장/syllables
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 Added syllable point: 모 at 2.2741773858123704s, 218.82349584739433Hz
Console.js:61 🎯 Added syllable point: 든 at 2.43544622383563s, 296.2258308788384Hz
Console.js:61 🎯 Added syllable point: 것 at 2.590989540982323s, 274.781728953937Hz
Console.js:61 🎯 Added syllable point: 을 at 2.778023222950126s, 266.3677728079442Hz
Console.js:61 🎯 Added syllable point: 할 at 2.9717366792739224s, 262.5015932112082Hz
Console.js:61 🎯 Added syllable point: 순 at 3.122508729023478s, 251.54992852197566Hz
Console.js:61 🎯 Added syllable point: 없 at 3.2627839904993303s, 185.9285246920596Hz
Console.js:61 🎯 Added syllable point: 어 at 3.442183644631713s, 191.60137912000414Hz
Console.js:61 🎯 Added syllable point: 도 at 3.6378056079143644s, 214.4410335765329Hz
Console.js:61 🎯 Added syllable point: 무 at 3.7639256230972413s, 178.63627200026443Hz
Console.js:61 🎯 Added syllable point: 언 at 3.904359440471532s, 211.56305854417423Hz
Console.js:61 🎯 Added syllable point: 가 at 4.064674025015363s, 166.3805747599183Hz
Console.js:61 🎯 Added syllable point: 는 at 4.180138696026098s, 191.1573456548237Hz
Console.js:61 🎯 Added syllable point: 할 at 4.303237394872255s, 244.6303739290155Hz
Console.js:61 🎯 Added syllable point: 수 at 4.462164638556928s, 222.26033856638804Hz
Console.js:61 🎯 Added syllable point: 있 at 4.569995281732243s, 169.59249668737766Hz
Console.js:61 🎯 Added syllable point: 다 at 4.70794378522411s, 137.98177654165664Hz
Console.js:61 🎯 Loaded 17 syllable representative points, maxTime: 4.70794378522411s
Console.js:61 🎯 X-axis adjusted to audio duration: 0 - 5.00794378522411 seconds (maxTime: 4.70794378522411s)
Console.js:61 🧹 음절 표시 초기화 완료
Console.js:61 🎯 Adding annotations for 17 syllables:
Console.js:61 🎯 Sample syllables: (3) [{…}, {…}, {…}]
Console.js:61 🎯 Chart Y 범위: -10 ~ 15 labelY: 13.75
Console.js:61 🎯 음절 0: 모 (2.199s - 2.350s)
Console.js:61 🎯 음절 1: 든 (2.350s - 2.521s)
Console.js:61 🎯 음절 2: 것 (2.521s - 2.661s)
Console.js:61 🎯 음절 3: 을 (2.661s - 2.895s)
Console.js:61 🎯 음절 4: 할 (2.895s - 3.048s)
Console.js:61 🎯 음절 5: 순 (3.048s - 3.197s)
Console.js:61 🎯 음절 6: 없 (3.197s - 3.329s)
Console.js:61 🎯 음절 7: 어 (3.329s - 3.556s)
Console.js:61 🎯 음절 8: 도 (3.556s - 3.720s)
Console.js:61 🎯 음절 9: 무 (3.720s - 3.808s)
Console.js:61 🎯 음절 10: 언 (3.808s - 4.001s)
Console.js:61 🎯 음절 11: 가 (4.001s - 4.129s)
Console.js:61 🎯 음절 12: 는 (4.129s - 4.232s)
Console.js:61 🎯 음절 13: 할 (4.232s - 4.375s)
Console.js:61 🎯 음절 14: 수 (4.375s - 4.550s)
Console.js:61 🎯 음절 15: 있 (4.550s - 4.590s)
Console.js:61 🎯 음절 16: 다 (4.590s - 4.825s)
Console.js:61 🎯 Syllable annotations added and chart updated!
Console.js:61 🎯 현재 annotations 수: 35
Console.js:61 🎯 차트 업데이트 완료!
Console.js:61 🎯 피치 콜백 설정 중...
Console.js:61 🎯 피치 콜백 설정 중...